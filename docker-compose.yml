version: '3.8'

services:
  # Infrastructure services
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: sa3d
      POSTGRES_PASSWORD: sa3d_password
      POSTGRES_DB: sa3d_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa3d"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

  # Application services
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: api-gateway
    ports:
      - "8080:8080"
    environment:
      GATEWAY_SERVER_PORT: 8080
      GATEWAY_REDIS_ADDR: redis:6379
      GATEWAY_AUTH_JWT_SECRET: ${JWT_SECRET:-development-secret-change-in-production}
      GATEWAY_SERVICES_ANALYSIS_URL: http://analysis-service:8080
      GATEWAY_SERVICES_VISUALIZATION_URL: http://visualization-service:8080
      GATEWAY_SERVICES_COLLABORATION_URL: http://collaboration-service:8080
      GATEWAY_SERVICES_METRICS_URL: http://metrics-service:8080
    depends_on:
      - redis
      - analysis-service
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  analysis-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: analysis
    ports:
      - "8081:8080"
    environment:
      ANALYSIS_SERVER_PORT: 8080
      ANALYSIS_DATABASE_HOST: postgres
      ANALYSIS_DATABASE_PORT: 5432
      ANALYSIS_DATABASE_USER: sa3d
      ANALYSIS_DATABASE_PASSWORD: sa3d_password
      ANALYSIS_DATABASE_NAME: sa3d_db
      ANALYSIS_REDIS_ADDR: redis:6379
      ANALYSIS_KAFKA_BROKERS: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (to be added)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     REACT_APP_API_URL: http://localhost:8080
  #   depends_on:
  #     - api-gateway

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data: